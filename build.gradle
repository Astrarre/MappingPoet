buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.net.minecrell:licenser:0.2.1"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
}
apply plugin: net.minecrell.gradle.licenser.Licenser

group 'net.fabricmc'
version '0.1.0'

sourceCompatibility = 1.8

def ENV = System.getenv()
version = version + "+" + (ENV.BUILD_NUMBER ? ("build." + ENV.BUILD_NUMBER) : "local")

repositories {
    mavenCentral()
    maven {
        name = 'Fabric'
        url = 'http://maven.modmuss50.me/'
    }
}

dependencies {
    compile 'com.squareup:javapoet:1.12.1'
    compile 'net.fabricmc:tiny-mappings-parser:0.2.2.14'
    runtimeOnly 'com.google.guava:guava:28.2-jre'

    compile 'org.ow2.asm:asm:8.0'
    compile 'org.ow2.asm:asm-analysis:8.0'
    compile 'org.ow2.asm:asm-commons:8.0'
    compile 'org.ow2.asm:asm-tree:8.0'
    compile 'org.ow2.asm:asm-util:8.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Implementation-Title': 'MappingPoet',
                'Implementation-Version': version,
                'Main-Class': "net.fabricmc.mappingpoet.Main"
    }
}

license {
    header file('HEADER')
    include '**/*.java'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        if (project.hasProperty('mavenPass')) {
            maven {
                url = "http://mavenupload.modmuss50.me/"
                credentials {
                    username = "buildslave"
                    password = project.getProperty('mavenPass')
                }
            }
        }
    }
}